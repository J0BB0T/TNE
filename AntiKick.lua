--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn)local bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da,db=95,66,65,88,36,60,66,69,31,43,24,74,95,67,36,12,90,39,88,73,85,82,71,12,38,43,53,18,81,63,68,73,24,61,45,67,27,94,49,65,46,80,41,29,73,55,10,11,36,43,75 while bn~=78 do if bo>=830 then if bo>=1231 then if bo>=1374 then if bo>=1480 then if bo>=1521 then if bo<1562 then bo=1569 return cn(cp(cj()),{},cj())();else break end else cn=function(bn,dc,dd,de,de,de)local de,df,dg,dh,di de=bn[82]do df=bn[137]end di=bn[25]dh=bt dg=bn[129]return function(...)local bn,dh,dj,dk,dl,dm,dn,_do,dp dn=1 dl=-1 do dp=-1 end bn={}dk={...}_do=(by('#',...)-j)dm={}dh={}for j=0,_do do if(not(j<di))then bn[(j-di)]=dk[(j+1)];else dh[j]=dk[(j+1)];end;end;dj=(_do-di+1)do while true do local j,di,dk,_do,dp,dq,dr,ds,dt,du _do=df[dn]du=_do[174]j=_do[145]dq=_do[112]dr=_do[193]di=_do[92]dp=_do[136]ds=_do[150]dk=_do[185]dt=_do[39]if not(du>37)then if not(du<19)then do if not(du<28)then if not(du>32)then if not(du>29)then if(du>28)then dh[dq]=nil;else do df[dn]={[92]=0,[185]=56,[136]=0,[174]=du- -19,[o]=2};end dn=(dn-1);end else if not(du<31)then if 31==du then local j,o,dr o=_do[112]j=dh[(o+2)]dr=(dh[o]+j)dh[o]=dr;if((j>0))then if(not(dr>dh[o+1]))then dn=dk;dh[(o+3)]=dr;end elseif(not(dr<dh[o+1]))then dn=dk;do dh[(o+3)]=dr;end end else do dh[dq]=dh[dk];end end else local j j=_do[112]dh[j](dh[(j+1)])end end else if not(du<q)then if not(du>35)then dh[dq]=dh[di]==dh[dk];else if(du<37)then df[dn]={[112]=6,[136]=0,[185]=6,[92]=y,[174]=du-10};dn=(dn-1);else dh[dq]=(dh[_do[185]]%dg[di]);end end else if(du<34)then local j,o,q,y y=dq do q,o=ck(dh[y](cz(dh,(y+1),dk)))end dl=(o+y-1)j=0 do for o=y,dl do do j=(j+u);end dh[o]=q[j];end;end else local j,o,q j=dq q={dh[j](cz(dh,j+1,dl))}o=0 for u=j,di do o=(o+1);dh[u]=q[o];end end end end else if not(du<23)then if not(du<25)then if not(du>25)then if dh[dq]then dn=dk;end;else if(du>26)then df[dn]={[92]=0,[z]=du- -6,[136]=0,[112]=3,[185]=6};dn=(dn-1);else dh[dq]=dh[dk][dg[di]];end end else if(du<24)then local j j=dq dh[j]=dh[j](dh[j+1]);else local j do j=dq end dh[j]=dh[j]();end end else if not(du<21)then do if not(du~=bf)then while(dg[_do[112]]<dh[di])do dn=dk;break end else dg=bt[_do[112]](dg)end end else if not(du~=19)then local j j=_do[112]do dh[j](cz(dh,(j+1),dl))end else local j,o,q o=de[dk]j=nil q={}do j=da({},{__index=function(u,u)local u=q[u];return u[p][u[2]];end,__newindex=function(p,p,u)local p=q[p]p[1][p[w]]=u;end;});end for p=1,di do local u do u=_do[17][p]end do if u[1]then q[(p-1)]={dh,u[2],nil,nil};else q[(p-1)]={dc,u[2],nil,nil};end;end do dm[(#dm+1)]=q;end end;dh[dq]=cn(o,j,dd);end end end end end else if not(du>8)then do if not(du<4)then do if not(du>5)then do if(du>4)then df[dn]={[92]=20,[112]=1,[174]=du- -21,[185]=0,[136]=0};do dn=(dn-1);end elseif not dh[dq]then dn=dk;end end else do if not(du<7)then if(_do[174]>7)then local j,o,p o=dq p=dh[o]j=_do[185]for q=1,j do do p[q]=dh[(o+q)]end end;else dh[dq]=dc[_do[185]];end else do dh[dq]=(dh[dk]-dh[_do[92]]);end end end end end else do if not(du>1)then do if(du<e)then local e e=dq do do return dh[e](cz(dh,(e+1),dl))end end;else do dh[dq]=(dh[dk]+dh[di]);end end end else if not(du~=2)then dh[_do[112]]={};else do if(not(dh[dq]==dh[di]))then dn=_do[185];end;end end end end end end else if not(du<14)then do if not(du<16)then do if not(du<17)then if(du<18)then df[dn]={[112]=1,[174]=_do[174]-2,[92]=a,[185]=25,[136]=0};dn=(dn-1);else local a,e,j,o a=dq o,j=ck(dh[a](dh[(a+1)]))dl=(j+a-1)e=0 for j=a,dl do e=(e+1);dh[j]=o[e];end;end else df[dn]={[92]=36,[136]=0,[185]=72,[112]=4,[174]=du- -43};dn=(dn-1);end end else if(du>14)then dh[_do[112]][dg[dk]]=dh[di];else dh[dq]=#dh[dk];end end end else if not(du>m)then if(du>9)then local a a=dq do dh[a](cz(dh,(a+1),_do[185]))end else df[dn]={[185]=72,[92]=53,[136]=0,[112]=6,[174]=du- -50};dn=(dn-1);end else do if not(du>11)then local a,e a=dq e={}for j=1,#dm do local m m=dm[j]do for j=0,#m do local o,p,q p=m[j]q=p[1]o=p[2]do if(q==dh and o>=a)then e[o]=q[o];p[1]=e;end;end end;end end;else if not(_do[174]~=12)then do return dh[dq]end else local a a={}if(#dm>0)then do for e=1,#dm do local j j=dm[e]for e=0,#j do local m,o,p o=j[e]p=o[bb]m=o[2]if(p==dh and m>=0)then do a[m]=p[m]end o[1]=a end end end end end return dh[(dq+1)],du;end end end end end end end else if not(du<57)then if not(du>66)then if not(du>61)then if not(du>58)then if(du<58)then local a a=dq dl=(a+dj-1);for e=a,dl do local j j=bn[(e-a)]dh[e]=j;end;else local a,e,j a=dq j={dh[a](dh[a+1])}e=0 for m=a,di do do e=(e+1);end dh[m]=j[e];end end else if not(du<60)then if(du<61)then dh[dq]=(dh[dk]*dg[di]);else dn=((dh[dq]==dh[di])and dk or dn)end else dh[dq]=dg[dk]end end else if not(du>63)then if not(du~=62)then local a,e,j,m,o a=dq j=_do[92]o=(a+2)e={dh[a](dh[a+1],dh[o])}for p=1,j do do dh[(o+p)]=e[p]end end m=dh[(a+3)]if m then do dh[o]=m end else dn=dk;end;else dn=((dg[dq]~=dg[di])and dk or dn)end else if not(du>64)then local a a=dq dh[a]=dh[a](cz(dh,a+1,dl));else if 65==du then local a,e do e=dk end a=dh[e]for j=(e+1),di do a=(a..dh[j]);end;do dh[dq]=a;end else dn=((dh[dq]~=dh[di])and dk or dn)end end end end else if not(du<72)then if not(du>73)then if(du>72)then dh[dq]=(dh[_do[185]]+dg[di]);else dn=((dg[dq]<dh[di])and dk or dn)end else if not(_do[174]>74)then local a a=_do[112]dh[a]=dh[a](cz(dh,a+1,dk));else if(du<76)then dh[dt]=(function()dh[_do[112]]=cn(de[_do[193]],nil,dd);end)else dh[dq]=cn(de[dk],n,dd);end end end else if not(du<69)then if not(du>69)then dn=dk;else if(du>70)then df[dn]={[185]=20,[92]=22,[136]=0,[174]=du-19,[112]=15};dn=(dn-f);else df[dn]=co[dp];dn=dk;end end else if(du<68)then local a,e a=dq e={}if(#dm>0)then for f=1,#dm do local j do j=dm[f]end for f=0,#j do local m,n,o do m=j[f]end do o=m[1]end n=m[2]while(o==dh and n>=0)do e[n]=o[n]m[1]=e break end end end end return cz(dh,a,dl);else do while(dh[_do[112]]==dg[di])do dn=dk;break end end end end end end else if not(_do[174]<47)then do if not(du<52)then if not(du>53)then if(du<53)then dh[dq][dh[dk]]=dh[di];elseif(not(dh[dq]~=dh[_do[92]]))then dn=dk;end else if not(_do[174]<55)then if(du<56)then do df[dn]={[92]=40,[174]=du- -4,[v]=44,[112]=5,[136]=0};end dn=(dn-1);else local a,e do a=dq end do e=dh[dk]end dh[(a+1)]=e;dh[a]=e[dg[di]];end else do df[dn]={[92]=45,[136]=0,[112]=2,[174]=du-6,[185]=67};end dn=(dn-1);end end else do if not(du>48)then if(du<48)then dh[dq]=dd[dg[dk]];else dh[_do[112]][dg[dk]]=dg[di];end else if not(du>49)then df[dn]={[185]=0,[112]=bl,[174]=du-23,[92]=20,[136]=0};dn=(dn-1);else if(du>50)then do for a=dq,dk do dh[a]=nil;end;end else dn=((dg[dq]==dg[di])and dk or dn)end end end end end end else do if not(du>41)then if not(du<40)then if 40==du then local a,e,f,j do j=dq end a,f=ck(dh[j](cz(dh,(j+1),dl)))dl=(f+j-1)e=0 for f=j,dl do e=(e+c);dh[f]=a[e];end;else do dh[dq]=dh[_do[185]][dh[di]];end end else do if(du>38)then dh[dq]=(not dh[dk]);else do while(dh[dq]~=dg[di])do dn=dk;break end end end end end else if not(du>43)then do if(du>42)then local a,c,e a=dq c=dh[a]e=dh[(a+2)]if((e>0))then do if((c>dh[a+1]))then dn=dk;else dh[(a+3)]=c;end end elseif((c<dh[a+1]))then dn=dk;else do dh[(a+3)]=c;end end else dh[_do[d]]=(0~=dk);end end else if not(du>44)then dh[_do[112]]=(dh[dk]/dg[di]);else if 45==_do[174]then local a a=dq do do return dh[a](cz(dh,(a+1),_do[185]))end end;else do if((dh[dq]<dh[di]))then dn=_do[185];end;end end end end end end end end end do dn=(dn+1);end end;end end;end bo=1521 end else if bo>=1410 then if bo<1426 then bo=1432 bt={}else cy={}bo=1480 end else bo=1410 do cp=function(a,c,c,c)local c,d,e,f,j,m,n,o=70,57,63,13,30,33,90,51,97,60,66,30,80,10,31,78,62,71,17,52,13,92,58,75 while c~=46 do if d>=343 then if d>=416 then if d>=474 then if d>=511 then if d<547 then d=549 return f;else c=46;end else f[137]=n;d=511 end else if d>425 then d=474 do for c=1,ch()do local p,q,u,v,w,y=92,49,69,46,19,68,40,59,82,96,86,86,11,31,87,30,88,88,83,26,31,71,26,70,45,82 while p~=56 do if q>=371 then if q<=465 then if q>=425 then if q>429 then v[92]=ca(u,21,29);q=500 else q=465 v[185]=ca(w,12,33);end else if q<392 then q=400 v[174]=ca(w,1,11);else v[112]=ca(u,3,11);q=425 end end else if q>=552 then if q>=590 then if q>598 then p=56;else q=630 n[c]=v;end else v[39]=-v[bh]q=590 end else if q>505 then q=552 v[150]=-v[112]else q=524 v[136]=ca(u,ba,20);end end end else if q>=181 then if q>=257 then if q<=257 then q=284 w=ch()else if q>288 then v[93]=y q=371 else y=ca(u,1,2)q=333 end end else if q>186 then q=257 u=ch()else q=209 while bw()==1 do for c=1,bw()do v[17][c]={bw()==0,ch()}end break end end end else if q>=125 then if q<153 then v[145]=bw();q=156 else q=181 v[17]={};end else if q<81 then q=89 u,v,w,y=nil else do v={{},nil,nil,nil}end q=125 end end end end end end end else f[82]=e;d=434 end end else if d>=377 then if d<385 then f[129]=m d=394 else d=416 for c=1,ch()do e[c-1]=cp();end end else if d>347 then d=377 for c=1,j do local p,q,u,v=81,70,79,75,39,88,69,72,73,65,90,98,97,84 while p~=41 do if q<=125 then if q<=70 then q=108 u,v=nil else if q<118 then u=bw()q=125 else q=142 v=nil end end else if q<=142 then q=191 do if(not(u~=2))then v=(0~=bw());elseif(1==u)then v=bu();elseif(not(u~=3))then v=ci();elseif(not(u~=4))then v=a[ci()];end;end else if q<210 then q=212 m[c]=v;else p=41;end end end end end else d=358 m={}end end end else if d<=174 then if d>=125 then if d<165 then d=174 e={}else d=221 f={}end else if d>59 then n={}d=125 else e,f,j,m,n,o=nil d=86 end end else if d>=273 then if d>275 then d=343 j=ch()else d=300 do f[25]=bw();end end else if d>228 then for a=(#co+1),(#co+o)do local c,e,f,j,m=68,45,49,45,98,38,37,56,13,77,42,10,28,89,89,54,32,79,44,22,41,10,25,66,46 while c~=42 do if e>=265 then if e>=384 then if e<=429 then if e<427 then m[150]=-m[112]e=429 else do m[39]=-m[l]end e=452 end else if e<466 then e=474 co[a]=m;else break end end else if e>=325 then if e>329 then e=384 m[185]=ca(j,12,33);else e=348 m[92]=ca(f,21,29);end else if e<279 then m[112]=ca(f,3,11);e=284 else do m[193]=ca(f,12,20);end e=325 end end end else if e>=146 then if e<=181 then if e>150 then e=203 m[136]=bw();else j=ch()e=181 end else if e<220 then m[93]=ca(f,1,2);e=222 else m[174]=ca(j,1,11);e=265 end end else if e<=81 then if e>50 then e=112 m={}else e=81 f,j,m=nil end else if e<126 then m[145]=bw();e=131 else f=ch()e=146 end end end end end end d=273 else do o=ch()end d=239 end end end end end end end end end else if bo<=1273 then if bo>1239 then bo=1300 do bu=function()local a,c,d,e,f,j,l,m=91,56,15,14,39,58,95,96,68,54,74,14,39,27,55,12,38,28 while a~=44 do if c<=200 then if c<=81 then if c<72 then c=81 d,e,f,j,l,m=nil else c=114 j=ch()end else if c>=157 then if c<198 then c=200 do if((j==0 and l==0))then return 0 end end else do d=((-1)^cm(31,l,1))end c=234 end else do l=ch()end c=157 end end else if c<=313 then if c>=274 then if c>280 then f=1 c=344 else c=313 e=(cm(0,l,20)*4294967296+j)end else m=cm(t,l,11)c=274 end else if c>=382 then if c>391 then a=44;else c=431 do return(d*(2^(m-1023))*(e/cu+f))end end else if not(m~=0)then if not(e==0)then m=1 f=0 else do return(d*0)end end elseif be~=m then else if not(e~=0)then do return(d*(0/0))end else do return(d*(1/r))end end end c=382 end end end end end end else do cc=function()local a,c do a,c=bp(br,bv,(bv+2))end bv=(bv+2);do return((c*256)+a);end end end bo=1273 end else if bo>=1339 then if bo>1342 then bo=1374 co={}else bo=1356 ck=function(...)return{...},by('#',...)end end else ci=function(a,a,a,a,a)local a,c,d,e=84,51,51,37,46,97,10,38,81,74,95,47,91,25,34 while a~=35 do if c<=123 then if c>=92 then if c>101 then c=147 e=br:sub(bv,(bv+d-1))else c=123 d=ch()end else c=92 d,e=nil end else if c<=147 then c=190 bv=(bv+d);else if c<205 then c=213 return e;else a=35;end end end end end bo=1339 end end end else if bo>=999 then if bo>=1098 then if bo>=1141 then if bo<1180 then ch=function()local a,c,d,e c,d,a,e=bp(br,bv,(bv+3))bv=(bv+4);return((e*16777216)+(a*bm)+(d*s)+c);end bo=1189 else do bw=function()local a a=bp(br,bv,bv)do bv=(bv+1);end return a;end end bo=1231 end else bv=1 bo=1141 end else if bo<=999 then bo=1046 cm=function(a,c,d,e,e,e)local e,f,j=68,54,62,18,86,52,96,91,85,46,65,55,38,16,60 while e~=27 do if f<=101 then if f<=54 then j=nil f=83 else if f<96 then f=101 j=nil else j=((c/ce[a])%ce[d])f=133 end end else if f>=164 then if f<176 then f=182 do return j end else e=27;end else f=164 j=(j-j%1)end end end end else if bo>1049 then ca=function(a,c,d,e,e,e)local e e=((a/2^(c-1))%2^((d-1)-(c-1)+1))return(e-e%1);end bo=1098 else do cw=(bit_lib and bit_lib.bxor or function(a,c)a=a%(2^g)c=c%(2^32)local d,e=0,1 while a>0 and c>0 do local f,g=a%16,c%16 d=d+bz[f+1][g+1]*e a=(a-f)/16 c=(c-g)/16 e=e*16 end d=d+a*e+c*e return d end)end bo=1083 end end end else if bo<=868 then if bo>835 then cu=(2^52)bo=890 else bo=868 cf=''end else if bo<=890 then bo=918 ce={[0]=1}else if bo<946 then bo=952 cx=2 else for a=bi,31 do do ce[a]=cx end cx=(cx*2)end bo=999 end end end end end else if bo>=441 then if bo<=593 then if bo>=517 then if bo>=561 then if bo<586 then cd=math.abs bo=593 else cl=math.floor bo=616 end else bq=(function(a,c,c,c)if'number'==cr(a)then do return true end else return false end end)bo=561 end else if bo<478 then bo=487 by=select else bo=517 cr=type end end else if bo>=737 then if bo>=773 then if bo>782 then bo=830 bz={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,bj,10,11,h,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,bd,5,4,3,2,1,0,15,14,13,12,b,10,9,8,},{8,9,10,11,12,13,14,15,bg,1,2,3,4,5,6,7,},{9,8,11,10,bk,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,k,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,i,15,14,9,8,11,10,5,4,7,6,1,0,x,2,},{14,15,12,13,10,11,8,9,6,7,bc,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}else do br=cq('0300000000080860001A0800000000158000002F8000000000184010000A40000000001F000000030400000067616D65030A000000476574536572766963650307000000506C6179657273030B0000004C6F63616C506C617965720309000000436861726163746572030E000000436861726163746572416464656403040000005761697401000040E5B7EEFF41010000E0045272E441010000900656D5FF4101000000B61875F24101000050C87217FD41010000E0F09E89FD41010000805569C8FF41010000E052A4C8FF4103050000007072696E7403050000007461626C650306000000636F6E63617403020000002C20031000000056657273696F6E20507265302E352E35030A000000476574506C61796572730307000000436861747465640307000000436F6E6E656374030B000000506C61796572416464656403040000007461736B0305000000737061776E03050000007063616C6C03020000005F47030200000041480302000000414B0303000000707265070000000500000000398850023B88000000004D98F0043B98000000005C0040012900000000007800400129000000000054D0B00141D0000000011500000003180000004A46535F505249564154455F584F525F46554E4354494F4E01000000000000F0BF03040000007479706503050000007461626C650306000000737472696E6703040000006279746503040000006368617203030000007375620304000000677375620306000000636F6E6361740306000000696E7365727403040000006D61746803050000006C64657870030700000067657466656E76030C0000007365746D6574617461626C65030600000073656C65637401000000000000144001000000000000000001000000000000F03F030000000002010300000000000000000100000003040000005F454E5600000000050000000000E6007003451000000000000000000D0800000000010000002F0800000000000000000C10000000000400000043200000020000000010003000250000000000081030003C10000000020300000001000000000000F03F010000000000000000010000000000000040000000002C0000000000B600F0054568000000002E01C00245B8000000000C0000000C10000000000C00200001180000000062015004454000000000DE00F005453801000000000000000D20000000002E00200445100000000014004000060000000000000030002C2800000000080030003C1000000000360060034598000000003A0190004540000000000900A0023B08000000000D00B0033B100000000086010005452801000000320160054598000000000C0020000118000000005600200645B8000000000B0000001548010000003A0120054538000000000000E0032008000000002601100645980000000018004000060000000000000030002C300000000018005000060800000000040030002C3000000000D051200346D8000000003601E00045280100000082016002453801000000704AA00446F00000000014003000250800000000130050000388000000006601C0014508000000000B00100015F000000000BA00500245E800000000040000004310000000000B0000001510010000005A00A005452800000000030010002EA8000000006E017003458000000000100030002500000000000B004000151800000000B20090024560000000000000020100000001000000000000F03F000000000700000000000E01300145100000000004000000430800000000080000000E000000000008001000491000000000000010003410000000003A01C003453000000000000000000D0800005F0000000000B600C00045F00000000058004001290000000000500060014758000000004E01D00145E8010000003C0050013010000000003C0000000C100000000074002002201000000000883AA0074638000000007C00000120C8000000008000000620C800000000740020004A0001000000C60010054588000000000800E0041D9000000000080000000C1000000000250000004C0000000000EE00600445A001000000000000000D18000000007800D0042070000000007000000021F0000000006C002000400000000000A040500346A0000000002A01A0034578020000003C00500134A0000000001E00000645E8010000003A01F00245D00000000006003001452002000000090000002F18000000000C00E00220000000000008002000171000000000860050014510010000000500E0033B0800000000080020001A00000000000B00100019A0020000007200E00145C0000000000B0040002660000000006201900545C800000000100080001A2000000000150000002F2800000000140090001A2800000000190000002F20000000001800A0001A30000000008A00E00145A8020000005500D0023BA000000000590000002F18000000007432D001466001000000DE00800345E002000000F2001001457801000000590000063B98000000005C0040012900000000005C0000000EB8000000006100C0053B98000000002201C005459002000000290000002F78000000002D0000002F8000000000310000004C0800000000350000004C1000000000C122300046C0010000008E01500545F8010000007D2A600646D0010000004600F0FF2BE801000000A60050004550010000004600F0FF1F5001000000E60030004520000000003C000000020000000000410000063B90000000004500D0013B9800000000480000000E00000000006E00B00245D001000000090000002F2800000000080060001A10000000000D0000002F28000000000C0070001A1800000000110000002F28000000008A00A0014520010000006800700320A8000000006C00D0032018000000007000D0022060000000000E0180024530000000000A01700245A0010000005A00F0FF1F50020000007201E00545B000000000040000004308000000005A00F0FF2B780200000072016003455002000000000000000C10000000001D0000002F20000000001C00B0001A3800000000210000002F60000000002000D0001A4000000000250000002F700000000027000000047000000000AA00E005457002000000580020001710000000005B0050002608000000003E0160024570010001000000002040D0001A40000000010D000000030000000003010000002003050000006C6F77657203050000007061697273030400000067616D65030A000000476574536572766963650307000000506C6179657273030A000000476574506C617965727303040000004E616D65030300000073756201000000000000F03F03050000007461626C650306000000696E73657274000000003300000000000A0050004558000000000C0020003E3001000000820030024528000000000300200044D800000000AE00800245A0000000008E01D0024540010000000400000002000000000008003000380000000000080020001710000000000D0000002F200000000036014002457001000000030010002618000000005A00600345D000000000210000002F6000000000105A900B46700000000024008003200800000000280010012038000000000E00C001459000000000200010000A5000000000C200F0044508000000004E0100034530000000000400000043200000000010008000382000000000100000001228000000000C0050002200000000005A00F0054508000000008601B00045D800000000040040011D7801000000040000000C10000000005600F004450800000000000000000D18000000002000A000384000000000290000033B58000000002C0000000E0000000000200020004A58000000002400300038000000000024002000171000000000BE0070034560010000000C00B0001A08000000000C0000000C1000000000200090001A380000000020003000384000000000200020001710000000003A01700045F80000000023009000356800000000CE00F00045E800000000110000002F2800000000100060003820000000001900F0013B3800000000100020004A3000000000C600600145B0000016000000000810200017100000000008085000380800000000113050043B3000000000154810003B48000000000C3020004A3000000000081030031A10000000000808500038080000000019B801002FB801000000183020001A300000000008085000380800000000082820004A2800000000081030021A100000000008E0D10330E001000000102000041A20000000001580B0003B80000000000C085000380800000000158871023B8801000000080850003808000000001530D2053B3002000000094001002F4001000000081090023810000000001140B2043B40020000024C00000003050000007461626C65030400000066696E64030600000055736572496403050000006C6F776572030300000073756201000000000000F03F01000000000000184003060000002E6B69636B20010000000000001C4001000000000000F0BF0309000000776F726B7370616365030600000052656D6F746503090000005465616D4576656E74030A0000004669726553657276657203070000002E63726173682001000000000000204003040000007461736B0305000000737061776E03070000002E6272696E672003070000005069766F74546F030900000043686172616374657203080000004765745069766F7403070000002E666C696E67200308000000496E7374616E636503030000006E6577030A000000426F6479546872757374031000000048756D616E6F6964526F6F74506172740305000000466F7263650307000000566563746F723301000000008087C34003040000004E616D65030A000000466C696E67466F72636503080000004C6F636174696F6E0308000000506F736974696F6E030800000048756D616E6F6964030D000000506C6174666F726D5374616E640201030E00000047657444657363656E64616E747303050000007063616C6C030400000067616D65030A00000047657453657276696365030A00000052756E53657276696365030900000048656172746265617403040000005761697400030E00000046696E6446697273744368696C6403040000004865616403080000002E746F67676C652001000000000000224003020000005F47030200000041480307000000456E61626C656401000000000000144003050000002E667073200306000000737472696E670301000000200308000000746F6E756D626572030900000073657466707363617003060000002E6B696C6C2003060000004865616C7468010000000000000000030F0000005365745374617465456E61626C65640304000000456E756D031100000048756D616E6F696453746174655479706503040000004465616403080000002E70756E697368200306000000506172656E7401000000000000244003090000002E756E70756E69736801000000000000264003060000002E72616E6B200307000000506C6179657273031600000047657455736572496446726F6D4E616D654173796E630306000000696E7365727403080000002E756E72616E6B20030600000072656D6F76650200000000000000000200000003040000007461736B0305000000737061776E00000000080000000000C200B002451000000000000000000D1800000000010000002F0800000000000020001A000000000004000000070000000000000010001E10000000004E006002451000000000040000004320000001000000000008200030080000000002000000030A00000043616E436F6C6C6964650200000000000500000000003601600045080000000000000000070000000000F4115105461000000000000000000D08000000000400000043100000AE0100000000C60010044560030000002200F002458803000000090000002FD0010000000D0000002FC8010000001000E0042008000000000C000000122000000000080010001300000000009A00E00245180B000000220100044528070000003201500145F0060000009A00A00345F006000000190070053B50000000000C00000021300000000008002000400000000000EE0080034550090000000C0000000708000000000B0030003538010000006601C00445E8060000000C0020004A28000000000F00000004E00C000000FA002000454000000000090000002F400100000008009002381000000000240000001018000000002E00E00345E800000000080050003808000000001100B0053B30000000001500F0013B48000000007600800345E002000000080020004A200000000008009004381000000000100010042008000000003201E00145C0020000000800500038080000000059705002461001000000C97A4000461801000000080020004A2800000000A600600445C8030000006200900345F0060000010100020000000B0010001400000000000D0000002F88000000000C0020011A18000000002201500045A803000000100030001A2000000000080020004A20000000000B00000004E0050000000A00A00245D00B00000008005000380800000000110010003B3000000000150090023BA801000000080020004A28000000002200D0044518030000000C0000000718000000000C0060023818000000000C0050003A1000000000E6005001451807000000080050003808000000001100C0043B4800000000150010013B5000000000080020004A28000000006A0090024568080000000D0000002FE8000000000C0090011A18000000001100A0033BF000000000150010063BF0000000009600D00045300200000004000000430800000000D2004004458805000000000000000D20000000008600400245F0060000001900C0023BF000000000EC80100B463802000000080030000FE0000000000800000230F8000000008201E0014588050000001000900238200000000008006000092800000000100020004A3000000000100090043820000000003A01D00245380A0000000D0000002F40010000000C0090023818000000001500E0053B50010000000C0020004A28000000000C00B0021A18000000000C00C002381800000000FE00800145300900000032008004457801000000080020004A20000000000C005000380800000000150050013B88010000001A01F004459007000000080020004A28000000000B003001448804000000CA00E00145C00700000008000000071800000000000000003610000000007A00000545F006000000CA00B00145F0060000000B00600344380C000000660190044508060000002E01400445F00600000014AB9001463003000000110000002FB801000000100020001A200000000014000004200800000000190030053BC0010000000201D002456805000000090000002F0800000000080020001A10000000000C000000070000000000100000000708000000006200E00345580100000008005000380800000000110000063B300000000015D250044698030000006A01700345480B000000100040042010000000000C0010001E1000000000080000000B0000000000C600400345F0060000000B00F00044B00800000066000004456005000000080000000710000000000C005000380800000000F9F1B00246E803000000190070043B50000000000C0000002130000000005601E0044510060000000D0000002F08000000000C0020001A1800000000100000000700000000001400A0022010000000004A0190024590000000001500F0043B3800000000080020004A28000000000B00800044F807000000EE00600145B807000000080020001710000000000B00D00244300C0000000E00C00445000B000000080000000718000000000D0000002F5800000000080030000F18020000005A00F00445F006000000080000000710000000000C005000380800000000150000033B8000000000190090013B5000000000A600C00445C80A00000037001000193805000000AE00600345100B0000000C000000213000000000080020004000000000000C0000000708000000000B00300035F8020000004600E001451003000000090000002F90010000001089E00246F0040000000D0000002F90010000000C0030031A18000000003201C00445980C00000004006002201000000000080000000710000000000C0050003808000000002201700145000C0000005200300245F006000000090000002F58000000000800C0001A10000000000800D0001A10000000000800E0003810000000000601400545F00A0000003E01E00145C800000000100020004A300000000010006000492000000000150050023B50000000007201700245800B0000000C0000000718000000000C00B0011A18000000000C0020021A1800000000080030000F08010000006E01100345480800000008005000380800000000110020033B3000000000150000063B3800000000080020004A28000000003201400345680A000000E200D00145F006000000000000000D1000000000080020004000000000000C0000000708000000000B00300035E804000000BA00E0014568090000005E00F000455007000000080020004000000000000C0000000708000000000B003000356804000000C20010004548000000008A01E00345B0050000008601600345A0090000000B003000359008000000EE00A00545D805000000060030044508040000000800000007180000000008004001381000000000100050011A0000000000100060013820000000001000000012280000000008001000130000000000CA00600145280C00000008005000380800000000110080043B3000000000150010023B8000000000080020004A28000000000B00000344D0090000008A01900445B802000000210000002F380100000101000700000027001000140800000000200010001E1000000000180000000B0000000000EA00F0014518070000000600000445F006000000000000000D080000000008000000071800000000ACB920054600070000004CC20001460807000000E200300045E80C0000000C0020003E8002000000320180004540080000000D0000002F08000000000C00C0041A180000000010000000070000000000150000002F08000000004E00600445000900000008005000380800000000110010033B3000000000150050023BA801000000ACB010044668070000000B00B00344B80C0000003E0180014508000000000B00D00244900C0000008600B00145080B0000001900C0023B50000000000C0020004A3000000000040030022018000000000B00D0024420020000005E005003455006000000BE0090024508010000000E01A00045700C000000E600800045F00600000008000000071000000000C8D8300246D8070000004DE1900746E0070000001900C0023B50000000009200100045C004000000080000000710000000000C005000380800000000150020023B48000000003E0010034558000000000C000000213000000000080020004000000000000C0000000708000000000B00300035F806000000CA00C00245780A000000DA00400245C0060000000C0000000718000000000C0030021A18000000000C0050023020010000001E01F00445A00100000004001006201000000000CDF9C0084670080000004001A107467808000000F50A21054680080000009200300545800A000000090000002FC000000000080090011A10000000000D0060053BD0000000005E01800045A80A000000080000000710000000000C0050003808000000001500B0033B8000000000190050033B50000000000C000000213000000000080020004000000000004E005001457800000000080020004A28000000000B00700144A80B0000005E01900545000A000000140020001A2800000000180000000700000000001C001005201000000000140000002138000000000C0010001300000000002A01000145F0060000000C0010001E10000000000C0000000718000000000F00D00226080A0000001A00E0014530050000000C000000070800000000340030002310000000002200400045B0040000003A01C00045F00600000008004000380800000000EC6040014678090000000400B004201000000000E86A400B468809000000110090043B30000000002601700145300400000008005000380800000000110090043B3000000000150010043B8000000000080020004A28000000000B00B00444A8000000003A01400545C807000000080000000710000000000C0050003808000000001500F0013B8801000000190040023B50000000000C0000002130000000008600400145E8050000002E00F0054590060000000C0000000718000000000C00E002381800000000150010003B78010000000C0020004A28000000000F00D002442802000000060030054518020000001800000420080000000010000000213000000000080010001300000000002A01D00545600C0000000B00500444D803000000F60080034530060000000B00700444C00100000052016001453806000000B600000245F006000000080020004A20000000000800900438100000000010009004200800000000080020004A20000000006600F002458007000000100000000718000000001000B0011A2000000000080020004A20000000008601D00245E8010000000C000000213000000000080020004000000000000C0000000708000000000B003000355806000000E600A000453001000000080010001E10000000002A01000545F0060000004E0130024510000000003A01500345D80B000000F600200445F0060000009600B00345F006000000F8C8200346200B000000100010041A2000000000140000002A0800000000080010000A280000000076011000452803000000080020004A28000000000B00200444D0070000004600100645680C0000000C0070001B3000000000080020004000000000000C000000070800000000DA00A003454006000000080020004A280000000004001004201000000000090000002FC8010000000C0080052008000000002E019004455004000000080000000710000000000C0050003808000000001500B0003B8000000000190000023B50000000003601100445600B00000022018001457009000000090000002F08000000000800A0041A10000000000C000000070000000000110000002F4001000000460180044558020000001500A0033B30000000000999600546080C00000080A1600546100C0000001C0000042008000000008E00100045380D0000005201900545F006000000000000000D08000000005C91400746380C0000001100C0033B3800000000150080023B5000000000080020004A28000000001A0030014510050000004E01500145F0060000003601200045100D000000080050003808000000001100C0053B30000000001500D0053B48000000007600400545E808000000000000000D10000000000C0040031A18000000000C000000271800000000080030000FA001000000DA00E00545F006000000080000000710000000000C005000380800000000150050013B3800000000190090053B5000000000CA00B000451808000000000000000D180000000008000000071800000000080030021A10000000000800E003381000000000110000002FF8010000000E00200045200B000000B0E8900046100D0000001100E0013B30000000001500A0033B2002000000080020004A28000000006A00B00145580A0000002100B0043BC001000000180000002140000000000C000000280000000000080020004000000000000C0000000708000000000B003000353003000000DE00A002455000000100000000040810001A0800000001010000000306000000557365724964000000001000000000009A004003453000000000040000004310000000000700200035200000000076013005452800000000000000000D10000000001201300045580000000004000000070000000000C418A10946380000000008000000070800000000080010001A10000000008601C00145100000000004000000071000000000080000000700000000000C001006200000000000040010000A1800000000000000000D1800000000000001020000000307000000436861747465640307000000436F6E6E65637401000000000000000100000000000000000800000000005E01E0024510000000000400000043200000000004000000070000000000080000000708000000000C00C000200000000000040010000A1800000000A6006002453800000000000000000D2000000800000000000A00200145200000000004000000431800000000040010000A1800000000000000000D1800000000040010001A00000000000400200038080000000102010000000000000000000F002000140000000000D2000004451000001700000000012000002F2000000000001020004A10000000000410200017100000000004102000171000000000056800002F680000000009B840033BB800000000081090011A10000000000810B0011A10000000000810F0011A10000000000810E0001A100000000009F000002FF000000000082820004A28000000000468C102306801000000047021000F7001000000116061013B600100000004B821000FB8010000000810C0041A1000000000047022000F70020000001140C1043B4001000000044821000F4801000000196021063B600100000004A0110530A001000000040840051A08000000005500000003050000007461626C65030400000066696E64030600000055736572496403020000005F4703020000004148030C00000057616974466F724368696C6403080000005469746C654261720307000000427574746F6E7303050000005469746C650304000000546578740308000000416E74694875622B03070000005F466F6C6465720308000000496E7374616E636503030000006E65770306000000466F6C64657203050000005F5072656D030A00000054657874427574746F6E03090000005F5549436F726E657203080000005549436F726E657203050000005F4C697374030B00000043616E76617347726F757003060000005F4C697374540309000000546578744C6162656C030A0000005F5549436F726E6572310304000000466F6E740304000000456E756D03060000004E756E69746F03010000002B030A00000054657874436F6C6F72330306000000436F6C6F7233030700000066726F6D524742010000000000E06F40030A000000546578745363616C6564020103080000005465787453697A65010000000000002C40030B0000005465787457726170706564030B000000416E63686F72506F696E740307000000566563746F723201000000000000E03F03100000004261636B67726F756E64436F6C6F7233010000E00B00004440030C000000426F72646572436F6C6F7233010000000000000000030F000000426F7264657253697A65506978656C0308000000506F736974696F6E03050000005544696D3201A3F714A0703DEA3F030400000053697A6501F40092C051B89E3F010F0A965F1055DE3F03040000004E616D6503040000005072656D0306000000506172656E74030C000000436F726E657252616469757303040000005544696D01000000000000C03F030700000056697369626C6502000306000000416374697665010000600700804840010000600600804940010000E00300004C4001535636200000154001000000000000F03F01000000000000214003040000004C697374030A0000005F53637265656E477569030C000000546974696C6C69756D57656203080000005269636854657874031C00000041646465642062792073637269707420736F206E6F206572726F722E010000A009004066400100000000000034400310000000546578745374726F6B65436F6C6F7233010000E00B00003440030E0000005465787458416C69676E6D656E7403040000004C656674030E0000005465787459416C69676E6D656E740303000000546F7001DF43EABFCCCCEC3F03050000004C6973745401C74A36E151B88E3F039F0300003C666F6E7420636F6C6F723D22726762283235352C3235352C32353529223E3C666F6E7420666163653D22436F6465223E3C623E3C753E416E74694875622B3C2F753E3C2F623E3C2F666F6E743E3C2F666F6E743E0A0A3C666F6E7420666163653D225562756E7475223E5468616E6B7320666F722063686F6F73696E67203C623E416E74694875623C2F623E2E0A546865205072656669782069733C2F666F6E743E3C666F6E7420666163653D224E756E69746F223E20222E223C2F666F6E743E0A3C666F6E7420666163653D225562756E7475223E596F752043616E2052616E6B20416E6420556E72616E6B2057697468202E52616E6B2F2E556E72616E6B0A546865204C697374204F6620436F6D6D616E6473204172653C2F666F6E743E0A0A3C623E4B69636B3C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E43726173686573206120757365722E3C2F666F6E743E0A3C623E4272696E673C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E4272696E6773206120757365722E3C2F666F6E743E0A3C623E546F67676C653C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E546F67676C65732061207573657227732055493C2F666F6E743E0A3C2F666F6E743E0A3C623E666C696E673C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E466C696E6773206120757365722E3C2F666F6E743E0A3C2F666F6E743E0A3C623E4B696C6C3C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E5265737061776E73206120757365722E3C2F666F6E743E0A3C2F666F6E743E0A3C623E50756E6973683C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E52656D6F766564206120757365722773206368617261637465722E3C2F666F6E743E0A3C2F666F6E743E0A3C623E556E70756E6973683C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E52652D61646473206120757365722773206368617261637465722E3C2F666F6E743E0A3C2F666F6E743E0A3C623E465053205B4E756D5D3C2F623E0A3C666F6E7420636F6C6F723D22726762283132382C3132382C31323829223E53657473206120757365722773204650532063617020746F2061206E756D6265722E3C2F666F6E743E0A3C2F666F6E743E03090000004163746976617465640307000000436F6E6E6563740100000000000000000200000003050000005F4C697374030700000056697369626C65000000000B00000000009200100145080000000000000000070000000000000010001A000000000004000000070000000000040010001A0800000000040020001A0800000000D600F00445380000000004000000270800000000000010000F1000000000000000000D200000000004000000430800007701000000009E006003457000000000040000011A0000000000B570E1074610000000000800F0011A10000000000D0030013B6001000000110030003B60010000002A01500445B80A0000002601F00545680B000000110050023B6001000000150080013B4001000000190040053B6001000000080020004A3000000000448AC1094660000000000E01C00245C803000000010000002F0800000000000020001A0000000000040000000700000000002E01C00045D006000000040060011A0000000000E4C9F106469800000000040060011A0000000000080040011A0000000000040020000FB001000000D20050054598010000009920210646C000000000000050001A000000000000006000380000000000090040023B3800000000FA0040004570020000000800F0011A10000000000D0020043B5802000000110040043B58020000001500D0003B58020000002200C00445D007000000000010000FC000000000040000011A0000000000090000002FD000000000D45041034628010000004A01200045C0020000000800E0001A10000000000D00B0053B4001000000110090033B6001000000150010003B4001000000A200D001455008000000040000011A000000000098D1B107466801000000040050053808000000010100000000000F001000140000000000040010000A1800000000000000000B00000000000601F00045680B000000040080011A0000000000090000002FC0010000000800E0001A10000000000D0040003B90020000001100D0053B6001000000C600E0024518060000000800E0041A10000000000800F0041A10000000004CAA810946D801000000040060011A00000000006E00F00045C0090000001100D0053B6001000000150010033B1002000000190060003B6001000000080020004A3000000000040020000F88010000004A0020064538090000001100C0023B5001000000150010013B5001000000080020004A2800000000E8BAC10B463802000000040060011A000000000076005003451807000000110010053B0001000000150000033B0001000000080020004A2800000000F600000645D008000000000020004A100000000000006000380000000000090020013B4000000000000020004A10000000004A00B000452005000000040060011A000000000004009004301801000000040060011A0000000000090000002FF0000000008201900145E800000000BC59810346C002000000040020000FC800000000040000011A00000000000400C0013050000000009200400145900B0000000800F0011A10000000000D0090013BE801000000110090053BF0010000001500D0023BF8010000008201D00145180B000000040020000F3001000000040000011A0000000000090000002FF0000000000800F0011A10000000000D0070013B50010000004A01C00345F80300000000312100464003000000000010000F6000000000050000002F68000000008E01A003452004000000040060011A0000000000090000002FF0000000000800F0011A10000000001E01A005451009000000110050023B6001000000150030013B6001000000080020004A28000000008A00C00245E00A000000040040011A00000000000400B00330D001000000040040011A00000000000400200230E0010000005A014004450008000000040000011A0000000000090000002F78010000000800E0001A1000000000320090014570070000000300100019C000000000DA009003453800000000110010043B5001000000150090023B5001000000080020004A2800000000040020000F4801000000960070054508000000000400E0001A0800000000090030013B880000000040380107463004000000AE00D000456009000000040020000F8801000000040000011A00000000000400500330A001000000040000011A00000000000800C0001A00000000002A00500345180A000000080020004A2800000000040020000F5801000000040060011A00000000000400C002306801000000040060011A0000000000090000002F7801000000F600F0024538010000000400E0001A0800000000DD49910946B00400000004002000171000000000000010000FB000000000AA00D00145F009000000040060011A0000000000090000002FD000000000ACA1110A46E00400000056002006457805000000090000002F2000000000080050001A1000000000080070001A1000000000040020000FB001000000040000011A0000000000EE00B00345480600000000006000380000000000090050053B48000000007C2AC1074630050000000000B000305000000000AA007003454807000000110000043B6001000000150090023B8002000000C1C01103465805000000080020004A3000000000040020000F8801000000C600C0004590000000000800D0041A1000000000040020000F6002000000040060011A0000000000090000002FD0000000007A01D00445C801000000040020000FE800000000040060011A00000000000400200230080100000082013004459802000000040020000FB001000000040060011A0000000000090000002FD000000000080090011A1000000000D200C00045680A0000002880010846E805000000040000011A0000000000090000002F78010000000800E0001A10000000000D00B0013B800100000092004004454000000000080020004A2000000000040020000FB801000000040080011A0000000000080040011A0000000000040020000FB0010000001200800345F008000000090000002F2000000000080050001A1000000000080070001A1000000000080080001A1000000000040020000FB001000000EA000003456001000000090000002FF0000000000800F0011A10000000000D0040043B60010000006601300645800300000065906108469806000000080020004A20000000005098510946A806000000040020011A0000000000080000011A0000000000040020000FB0010000004A01D00545A00300000008000000070800000000080030001A1000000000000020004A1000000000CA00200245E8030000000900B0013BA80000000004002000171000000000000010000FA000000000050000002F68000000008A00700045A804000000090000002FF0000000000800F0011A10000000000D00A0003B6001000000110030003B600100000018002000370800000000A200100445700400000000006000020000000000050000002F68000000000400E0001A0800000000090050053B78000000005200F0004540030000000D00E0013B9001000000110030023B6001000000150050033B98010000001900C0053B6001000000080020004A3000000000AE000002454004000000040000011A000000000004004002301801000000040000011A000000000004002002302801000000040000011A00000000002E00600245A008000000080020004A2800000000040020000F5002000000040060011A0000000000040020023028010000003200900045D00400000004000000431000000000040040011A0000000000090000002F38010000000800E0001A10000000000D0010003B40010000001100D0043B40010000001A017005457808000000090000002F78010000000800E0001A10000000000D00A0023B800200000042015000454805000000190050033B6001000000080020004A3000000000040020000F7001000000040060011A00000000001E01D001453008000000080020004A2000000000040020000F3001000000040040011A0000000000090000002FF0000000005A00D00345E802000000090000002F38010000000069310446A8080000000D00A0043B40010000001100B0013B4001000000080020004A200000000082016003451003000000040020000FE800000000040000011A0000000000040020023008010000009A00600445A007000000040060011A000000000004003005305000000000000040000520000000004E01000245F0040000000D0010053B4002000000110030023B4002000000150040053B4002000000080020004A2800000000B200400045A005000000040040003108000000000400300430A001000000040040011A0000000000080040041A0000000000D200E00445C005000000000010000F8000000000114301014668090000000400E0001A0800000000090090053B9800000000040020001710000000003A00000145700B0000000D00D0023B40010000001100E0053B60010000001500D0023B0002000000190040033B6001000000080020004A30000000005A01100245380B000000090000002F38010000000800E0001A10000000000D00E0003B4001000000C5B0B10246D809000000080020004A20000000004601C00245880A000000050000002F68000000000400E0001A08000000000900A0033B98000000000400200017100000000006001004451001000000040020000FB001000000040020011A0000000000080060001C30000000000800E0001A10000000000D00F0023BC8010000005600700045980600000004002002303002000000040060011A00000000000400700430500000000076011005456003000000080050041A100000000008004000111000000000040060011A00000000001A00000645480A000000040020000F3001000000040060011A0000000000090000002FF0000000000800F0011A10000000000D0060013B5001000000420050014520020000001500F0003B60010000008879910546C00A000000040020000F5801000000040000011A00000000002A01400545E805000000040020000F5801000000040040011A00000000000400C002306801000000040040011A0000000000090000002F78010000000800E0001A10000000001601E005459009000000080020004A2800000000040020000F4801000000040040011A000000000006002003457806000000040020000F7001000000040040011A0000000000090000002F78010000000800E0001A10000000000D00C0043B0802000000A200400445F001000000000000000D2000000000000010000F9000000000050000002F68000000000400E0001A08000000002E01100445F006000000040000011A0000000000090000002FF0000000004860B10A46A00B0000000D00B0033B00010000006200E003455002000300000000013000002F30000000000D0800002F08000000000D6880013B68000000000F000000030E000000686F6F6B6D6574616D6574686F6403020000005F47030200000041480302000000414B030800000066756E6374696F6E03040000007761726E032C000000416E7469487562202D20416E74694B69636B204661696C656420284D697373696E672046756E6374696F6E29030C000000686F6F6B66756E6374696F6E03040000004B69636B030400000067616D6503070000005F5F696E646578030A0000005F5F6E616D6563616C6C03060000006C6F6164656403050000007072696E74031A000000416E7469487562202D20416E74694B69636B20456E61626C656403000000000000000000000000000000000300000000007E005003450800000000000000000D1800000000040000004308000000000000020100000003040000006B69636B00000000110000000000E200D000454800000000080000000708000000000C00B0012000000000001000A0012008000000000E01D002453000000000000000000D0800000000080000002D200000000008000000431800000000040000004318000000000800000007000000000003002000357800000000B200C0014570000000006201F002450800000000000000000D080000000026000002450800000000070010004468000000002A001001456000000100000000080000000000000000010200000003110000006765746E616D6563616C6C6D6574686F6403040000006B69636B000000001200000000004A01C002457000000000080000000708000000000C00000120000000000010000000390000000000BCF0E10646200000000008000000430800000000000000000D2000000000000000000D0800000000DE003001450800000000090000002F0800000000080020001808000000000B0020004430000000000601E0054540000000000400000043080000000008000000070000000000030020003548000000003201A00545880000000006019000450800003600000000002A00B00145A000000000010000002F1000000000000030001A00000000000000500030200000000041D8C1084620000000000500B0003B3800000000000010001E100000000026013003457000000000000000003310000000000D0000002F40000000000F0010001990010000007201E00145600100000011EAC1004660000000000C0000000C10000000000100E0023B2800000000000000000C10000000000C0020004A30000000000000100120180000000059E2210546900000000066015000450001000000010000002F080000000003000000040800000000E2006004455801000000000000000D1800000000150000004C00000000000C0020004A280000000008005001201800000000CE0030004528010000000D0000002F70000000001100E0053B78000000000C0010001E10000000007201D002456000000000110000002F50000000001500A0013B600000000102010000000000010000001B0020001410000000000C0020004A3000000000E60090054568010000000D0000002F0800000000110000002F50000000001500A0053B580000000102010000000000000000001B0020001408000000005201B00545800000000004000000432000000000D600D0014540000000004A008004452801000000040030002018000000000D0000002F10000000000C0030001A18000000000C00D000302000000000FE00B00345E0000000000D0000002F400000000010000000070000000000100090001A20000000005A00A00145C000005B00000000002E01300245D000000000110000004C0800000000B511D000461000000000190090023BA000000000140010001E1000000000CA00D0024558020000001600F00545780000000042002000454802000000200070001D4800000000200000000C10000000001800F0052018000000001D0050053B980000000014000000213800000000100010001300000000005E0140014508000000002C0060011A50000000002C00700138580000000103000A00000000010000000005000000370030001418000000004E00F00045F0000000005200100245400000000102000300000000010000001F002000142800000000180010001E1000000000190000002FD8000000010100010000001F0010001430000000005E01300145600100000004000000431800000000010000004C0000000000050000002F0800000000040020003808000000003A01800245C8010000002C0010000A6800000000240000000B0000000000CA00B0034548020000000C001000084000000000110000002F8000000000150000002F8800000000140020011A280000000076016001455000000000210070043B1800000000180020004A400000000018005001383000000000180080003A1000000000FE00F000453800000000000000000D1000000000180070003A10000000001B00000004A801000000E60070034598000000000C0000000240000000001100B0013B4000000000150030013B4800000000190050033B50000000001D0000063B5800000000EE003004451802000000210000002FE0000000002000D0011A40000000002000F00130F0000000004E0010034540000000000D0090013B1800000000040020004A1800000000040040001A0800000000080050001A08000000000B00000004F80100000076013001454002000000D00A100546F801000000080070003810000000000800200017100000000022016004457801000000210050053B6000000000250070013B6800000000290010023B70000000002D00B0053B7800000000760180044508010000004201C001457801000000180020003E78020000004A00400245300000000104000300000000010000000004000000000200000017004000141000000000190000002F08000000001800200038300000000072012004453001000000190000002F080000000018002000383000000000210080043B1800000000180020004A40000000000C00C00024280000000018007001383000000000A200700545B00200000101000500000023001000142000000000981A200746B802000000190000002FC8000000001800A0011A30000000001200000345A00000','..',function(a,b,b)return bx[bs(a,16)]end)end bo=797 end else bo=773 for a=0,255 do bx[a]=cg(a);end end else if bo>=657 then if bo>662 then bx={}bo=737 else bo=690 bs=tonumber end else bo=657 cz=(unpack or table.unpack)end end end else if bo<=172 then if bo>=121 then if bo>=146 then if bo<165 then ct=string.sub bo=172 else cq=string.gsub bo=212 end else bo=146 cg=string.char end else if bo<93 then bo=100 bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da,db=nil else bo=121 bp=string.byte end end else if bo<=285 then if bo>=252 then if bo>254 then bo=315 db=table.insert else bo=285 cs=table.concat end else bo=252 cv=string.rep end else if bo<=315 then cb=math.ldexp bo=356 else if bo>362 then da=setmetatable bo=441 else cj=(getfenv or function()return _ENV end)bo=399 end end end end end end end end)(2,11,1,112,1,1,32,8,12,1,0,92,10,nil,112,1,35,0,256,20,1,185,2,3,24,174,12,1,4,6,2047,21,0,92,1,5,13,1,65536)
