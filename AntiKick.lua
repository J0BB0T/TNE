--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t)local t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch=96,97,52,58,93,27,74,44,80,80,35,15,85,67,79,42,29,55,36,94,74,92,15,51,88,39,24,16,16,11,85,58,82,33,88,64,97,63,13,92,56,18,83,84,76,15,81,63,79,21,37,77,40 while t~=79 do if u<=805 then if u>=507 then if u>=649 then if u<=699 then if u<=649 then cf=(unpack or table.unpack)u=673 else if u>681 then do bs={}end u=745 else bp=tonumber u=699 end end else if u<=745 then u=776 for ci=0,255 do bs[ci]=cc(ci);end else if u<803 then u=805 y=cbfunction(ci,cj)return bs[bp(ci,16)]end)else bw={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,i,4,7,6,9,8,e,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,h,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,f,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,j,5,4,},{12,13,14,15,8,a,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}u=854 end end end else if u<=548 then if u>516 then do bd=type end u=570 else be=select u=548 end else if u>=594 then if u<623 then bh=math.abs u=629 else u=649 bt=math.floor end else u=594 bo=(function(a,e,e)if q==bd(a)then return true else do return false end end end)end end end else if u<=245 then if u>=163 then if u>=198 then if u<240 then u=245 br=string.sub else cb=string.gsub u=278 end else u=198 cc=string.char end else if u>101 then cd=string.byte u=163 else v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch=nil u=132 end end else if u>=408 then if u>=442 then if u<451 then bn=(getfenv or function()return _ENV end)u=459 else bq=setmetatable u=507 end else ba=math.ldexp u=442 end else if u<=278 then u=322 do ce=string.rep end else if u<354 then bx=table.concat u=362 else bj=table.insert u=408 end end end end end else if u<=1227 then if u<=991 then if u<=883 then if u>858 then u=915 bm=(2^52)else u=883 bv=''end else if u<=915 then bu={[0]=1}u=953 else if u<984 then do bc=2 end u=991 else do for a=1,31 do bu[a]=bc bc=(bc*2)end end u=1039 end end end else if u>=1162 then if u<=1162 then u=1194 w=1 else if u<1218 then u=1227 z=function()local a,e,f,h do f,a,h,e=cd(y,w,(w+3))end do w=(w+4);end return((e*16777216)+(h*65536)+(a*256)+f);end else do bb=function()local a a=cd(y,w,w)w=(w+1);return a;end end u=1262 end end else if u<=1039 then u=1072 v=function(a,e,f,h,h)local h,i,j=50,63,41,25,79,92,28,69,42,85,74,10 while h~=29 do if i>=170 then if i>=210 then if i<251 then i=258 return j else break end else i=210 j=(j-j%1)end else if i>=90 then if i>98 then j=((e/bu[a])%bu[f])i=170 else i=129 j=nil end else i=90 j=nil end end end end else if u>1078 then do bf=function(a,e,f,h)local h do h=((a/2^(e-1))%2^((f-1)-(e-1)+1))end return(h-h%1);end end u=1162 else ca=(bit_lib and bit_lib.bxor or function(a,e)a=a%(2^32)e=e%(2^32)local f,h=0,1 while a>0 and e>0 do local g,i=a%16,e%g f=f+bw[g+1][i+1]*h a=(a-g)/16 e=(e-i)/16 h=h*16 end f=f+a*h+e*h return f end)u=1118 end end end end else if u<=1404 then if u<=1293 then if u>1267 then by=function()local a,e,f,g,h,i,j,q=80,43,27,91,43,30,11,72,14,41,73,79,13,38,54,69,58,92 while a~=38 do if e>=195 then if e<=266 then if e<=195 then e=228 i=v(20,j,11)else if e<260 then q=(v(0,j,20)*4294967296+f)e=266 else e=307 g=1 end end else if e>=341 then if e>350 then a=38;else e=382 return(h*(2^(i-1023))*(q/bm+g))end else if not(i~=0)then if not(q==0)then i=1 g=0 else return(h*0)end elseif not(i==2047)then else if not(q~=0)then do do return(h*(0/0))end end else do return(h*(1/0))end end end e=341 end end else if e>=103 then if e>=135 then if e>139 then h=((-s)^v(31,j,o))e=195 else while((f==0 and j==0))do return 0 end e=158 end else j=z()e=135 end else if e<70 then f,g,h,i,j,q=nil e=79 else e=103 f=z()end end end end end u=1313 else u=1293 x=function()local a,e e,a=cd(y,w,(w+2))w=(w+2);return((a*256)+e);end end else if u>=1360 then if u<1396 then cg=function(...)return{...},be('#',...)end u=1404 else bi={}u=1444 end else bk=function(a,a,a)local a,e,f,g=58,32,31,98,56,22,95,21,85,32,32,92,21 while a~=42 do if e<=91 then if e>=67 then if e<83 then e=91 do f=z()end else e=131 g=y:sub(w,(w+f-1))end else e=67 f,g=nil end else if e<=131 then w=(w+f);e=177 else if e>179 then a=42;else e=197 return g;end end end end end u=1360 end end else if u>=1544 then if u>=1583 then if u<1604 then u=1612 return bg(bz(bn()),{},bn())();else t=79;end else bg=function(a,e,f,g)local g,h,i,j,o g=a[52]i=a[60]do h=a[179]end o=a[63]j=bl return function(...)local a,j,q,s,t,v,w,x,y do v=1 end q=-1 w=-1 t={}j={...}a=(be('#',...)-1)y={}do x={}end for w=0,a do do if(not(w<h))then do t[(w-h)]=j[(w+1)];end else do x[w]=j[(w+1)];end end;end end;s=(a-h+1)while true do local a,h,j,w,ba,bc,bd,be,bh,bj bh=o[v]j=bh[9]h=bh[188]do bd=bh[156]end bj=bh[90]bc=bh[d]a=bh[44]do w=bh[146]end do ba=bh[98]end be=bh[193]if not(j<29)then if not(j>43)then if not(j>35)then if not(bh[9]>31)then if not(j>29)then x[bd]=f[g[ba]];else do if(j<31)then local a a=bd x[a]=x[a](x[a+1]);else while((x[bd]==x[bc]))do v=ba;break end end end end else if not(j<34)then if(bh[9]<35)then x[bd]=(not(bh[98]==0));else x[bh[156]]=(not x[ba]);end else if not(j~=32)then x[bh[156]]=x[bh[98]];elseif(not(x[bd]>g[bc]))then v=ba;end end end else do if not(bh[9]<40)then do if not(j>41)then if(j>40)then local a a=bd x[a](cf(x,(a+1),bh[98]))else do g=bl[bd](g)end end else if(j>42)then x[bd]=(x[bh[98]]%g[bc]);else local a a=bd q=(a+s-1);do for d=a,q do local h h=t[(d-a)]x[d]=h;end;end end end end else if not(j<38)then if 38==j then local a,d do a=bd end d={}do for h=1,#y do local o o=y[h]for h=k,#o do local k,s,t do t=o[h]end k=t[1]s=t[p]if(k==x and s>=a)then d[s]=k[s];t[1]=d;end;end;end;end else local a,d d=bh[98]do a=x[d]end for h=(d+1),bc do a=(a..x[h]);end;x[bd]=a;end else if(bh[9]<37)then x[bh[156]]=(x[ba]+x[bc]);else x[bd]();end end end end end else do if not(j<51)then if not(j>54)then if not(j<53)then if(j>53)then local a,d,h h=i[ba]d=nil a={}d=bq({},{__index=function(k,k)local k=a[k];return k[1][k[2]];end,__newindex=function(k,k,o)local k=a[k]k[1][k[2]]=o;end;});for k=1,bc do local o o=bh[152][k]if o[1]then a[(k-1)]={x,o[2],nil,nil};else a[(k-1)]={e,o[2],nil,nil,nil};end;y[(#y+r)]=a;end;x[bd]=bg(h,d,f);else local a,d,h a=bd h={x[a](x[a+1])}d=0 do for k=a,bc do d=(d+1);x[k]=h[d];end end end else if not(j~=51)then local a,d,h a=bd h=x[(a+2)]d=(x[a]+h)x[a]=d;if((h>0))then do while(d<=x[a+1])do v=ba;x[a+3]=d;break end end elseif(not(d<x[a+1]))then do v=ba;end x[(a+3)]=d;end else local a,d,h,k,o a=bd k=bh[58]h=(a+2)d={x[a](x[a+1],x[h])}for p=1,k do x[(h+p)]=d[p]end o=x[(a+3)]if o then x[h]=o else v=bh[98];end;end end else if not(bh[9]<57)then if not(j~=57)then local a a=bd x[a]=x[a](cf(x,a+1,q));else local a a=bd x[a]=x[a](cf(x,a+1,ba));end else if(j>55)then local a,d,h,k a=bh[156]k,d=cg(x[a](cf(x,(a+1),q)))do q=(d+a-1)end do h=0 end for d=a,q do h=(h+1);x[d]=k[h];end;else local a a=bd x[a](x[(a+1)])end end end else if not(bh[9]>46)then if not(bh[9]<45)then if 45==bh[9]then local a a=bd x[a](cf(x,(a+1),q))elseif(not(x[bd]==g[bc]))then v=ba;end else x[bd][g[ba]]=g[bc];end else if not(j<49)then if(j<50)then if not x[bd]then v=ba;end;else local a,d,h h=bd d=x[h]a=x[(h+2)]if((a>0))then if((d>x[h+1]))then v=ba;else x[(h+3)]=d;end elseif((d<x[h+1]))then v=ba;else do x[(h+3)]=d;end end end else if not(j~=47)then local a a=bd x[a]=x[a]();else do x[bd]=(x[ba]+g[bc]);end end end end end end end else if not(bh[9]>13)then if not(j>6)then if not(j>2)then do if not(bh[9]<c)then do if(j>1)then x[bd]=x[ba][g[bc]];else local a,c,d,h d=bd c,a=cg(x[d](cf(x,(d+1),ba)))q=(a+d-n)h=0 for a=d,q do do h=(h+1);end x[a]=c[h];end;end end else x[bd]=(x[ba]/g[bc]);end end else if not(j<5)then if(j>5)then local a,c,d,h a=bh[156]do d,c=cg(x[a](x[(a+1)]))end q=(c+a-1)do h=0 end for c=a,q do h=(h+1);x[c]=d[h];end;else x[bd]=(x[ba]-x[bc]);end else if(j>3)then if((x[bd]<x[bh[58]]))then v=ba;end;else do x[bd][g[ba]]=x[bh[58]];end end end end else do if not(j<b)then if not(j<12)then if(bh[9]>12)then x[bd]=x[ba][x[bc]];else x[bd]={};end else if(j>10)then do x[bd]=e[ba];end else local a a=bd do return x[a](cf(x,(a+1),q))end;end end else if not(j>7)then if(x[bc]~=x[bd])then do v=ba;end end;else if(bh[9]<9)then local a do a={}end if(#y>0)then for b=1,#y do local c do c=y[b]end for b=0,#c do local d,e,h do e=c[b]end h=e[1]d=e[2]if(h==x and d>=0)then a[d]=h[d]e[1]=a end end end end do return x[bd],0;end else x[bd][x[ba]]=x[bh[58]];end end end end end else if not(j>20)then if not(j>16)then if not(j>14)then local a,b b=bh[156]do a={}end if(#y>0)then do for c=1,#y do local d d=y[c]for c=0,#d do local e,h,k e=d[c]h=e[1]k=e[2]if(h==x and k>=l)then a[k]=h[k]e[1]=a end end end end end return cf(x,b,q);else if 15==j then x[bd]=#x[bh[98]];else if(g[bc]==x[bd])then do v=ba;end end;end end else if not(bh[9]<19)then if(j<20)then do x[bd]=g[ba]end else x[bd]=bg(i[ba],nil,f);end else if(j>17)then if((g[bd]<x[bc]))then v=bh[98];end;else do return x[bd]end end end end else do if not(j>24)then if not(j<23)then if not(j~=23)then local a a=bd do return x[a](cf(x,(a+1),ba))end;else if x[bd]then v=ba;end;end else do if(j>21)then for a=bd,ba do do x[a]=nil;end end;else local a,b,c c=bd a={x[c](cf(x,c+1,q))}b=0 for d=c,bc do b=(b+1);x[d]=a[b];end end end end else if not(bh[9]>26)then do if(bh[9]>25)then local a,b b=bd do a=x[ba]end do x[(b+1)]=a;end x[b]=a[g[bc]];else x[bd]=nil;end end else if not(j~=27)then x[bd]=(x[ba]*g[bc]);else v=ba;end end end end end end end v=(v+1);end;end;end u=1583 end else if u>=1476 then if u>1484 then do ch={}end u=1544 else bl={}u=1509 end else bz=function(a,b)local b,c,d,e,f,g,h,i=74,40,27,84,16,16,74,46,39,41,97,20,51,40,81,93,20,97,33,68,24,92,76,92,63 while b~=37 do if c<=258 then if c<=128 then if c<=62 then if c<55 then d,e,f,g,h,i=nil c=62 else f={}c=93 end else if c>99 then e={}c=160 else d={}c=128 end end else if c>=211 then if c>216 then c=280 e[60]=d;else c=258 for j=1,z()do do d[j-1]=bz();end end end else if c<179 then i=z()c=182 else c=211 for d=(#bi+1),(#bi+i)do local i,j,k,l,n=88,69,29,29,17,36,77,70,70,77,29,69,57,46,93,39,93,74,78,47,57,36,31,36 while i~=47 do if j<=297 then if j<=162 then if j<=95 then if j>75 then j=132 n={}else j=95 k,l,n=nil end else if j<159 then j=162 n[188]=bb();else k=z()j=189 end end else if j>=251 then if j>256 then j=336 n[9]=bf(l,1,11);else j=297 n[130]=bf(k,1,2);end else if j>197 then j=251 n[44]=bb();else l=z()j=221 end end end else if j>=464 then if j>=536 then if j>541 then break else j=561 bi[d]=n;end else if j>471 then n[193]=-n[58]j=536 else j=488 n[146]=-n[156]end end else if j>=399 then if j>404 then j=464 n[98]=bf(l,12,33);else n[58]=bf(k,21,29);j=423 end else if j<359 then n[156]=bf(k,3,11);j=365 else n[90]=bf(k,12,20);j=399 end end end end end end end end end else if c<=385 then if c<=319 then if c>288 then for d=1,z()do local i,j,k,l,n,o=64,44,27,79,75,91,69,75,53,97,34,49,93,35,98,57,83,31,39,28,51,58,50,20,64,34 while i~=41 do if j<=304 then if j<=156 then if j>=114 then if j>117 then j=175 n[152]={};else n[188]=bb();j=156 end else if j<76 then k,l,n,o=nil j=85 else j=114 n={{},nil,nil}end end else if j>=237 then if j<=237 then j=272 l=z()else if j<302 then j=304 o=bf(k,1,2)else n[130]=o j=322 end end else if j>180 then j=237 k=z()else j=222 if not(bb()~=1)then for o=1,bb()do do n[152][o]={bb()==0,z()}end end end end end end else if j<=427 then if j<=338 then if j>329 then j=385 n[156]=bf(k,3,11);else n[9]=bf(l,1,11);j=338 end else if j<421 then n[98]=bf(l,12,33);j=427 else n[58]=bf(k,21,29);j=459 end end else if j<=484 then if j>466 then j=514 n[146]=-n[156]else j=484 do n[44]=bf(k,12,m);end end else if j<=514 then j=546 do n[193]=-n[58]end else if j>550 then i=41;else j=575 f[d]=n;end end end end end end end c=338 else e[179]=bb();c=319 end else if c>343 then g=z()c=426 else e[63]=f;c=385 end end else if c>=473 then if c>=510 then if c<523 then c=530 return e;else b=37;end else do e[52]=h end c=510 end else if c>431 then for b=1,g do local d,e,f,g=70,45,42,80,35,84,69,47,26,35,54,66,25,50 while d~=44 do if e>=129 then if e>=177 then if e<209 then e=217 h[b]=f;else d=44;end else e=177 if(4==g)then f=(0~=bb());elseif(not(g~=3))then f=by();elseif(1==g)then f=bk();elseif(not(g~=2))then f=a[bk()];end;end else if e<=45 then f,g=nil e=60 else if e>63 then f=nil e=129 else g=bb()e=109 end end end end end c=473 else c=458 h={}end end end end end end u=1476 end end end end end end end)(9,10,1,58,11,0,16,9,5,6,0,0,20,1,1,2,'number',1,1)end
