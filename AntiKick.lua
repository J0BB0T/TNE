--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,y)local y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=111,57,49,44,84,12,28,17,49,63,65,32,57,45,45,70,18,61,34,51,40,54,36,27,32,69,46,82,70,76,91,52,87,75,14,35,25,94,15,52,20,99,19,79,78,91,10,90,23,54,23,98,46 while y~=68 do if z<=707 then if z<=340 then if z>=202 then if z<=253 then if z<=202 then z=237 cg=string.rep else if z<250 then z=253 bl=table.concat else z=272 do bd=table.insert end end end else if z>=291 then if z>293 then bc=setmetatable z=389 else cd=(getfenv or function()return _ENV end)z=340 end else z=291 do bk=math.ldexp end end end else if z<=94 then if z<85 then ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=nil z=94 else z=114 bx=string.byte end else if z>=142 then if z<167 then z=175 bf=string.sub else z=202 bj=string.gsub end else bg=string.char z=142 end end end else if z<=536 then if z>=469 then if z>=493 then if z<529 then z=536 cf=math.abs else z=569 bo=math.floor end else z=493 bb=(function(bd,bf)do if not(bv(bd)~='number')then return true else return false end end end)end else if z<432 then do bq=select end z=438 else z=469 bv=type end end else if z<=638 then if z>=594 then if z>596 then ch={}z=657 else z=638 do bt=tonumber end end else z=594 cl=(unpack or table.unpack)end else if z<=657 then for bb=0,255 do ch[bb]=bg(bb);end z=685 else if z>689 then z=722 do bi={{0,1,2,3,w,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,a,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,k,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,m,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,t,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,i,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,h,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end else be=bjfunction(a,h,h,h)do return ch[bt(a,16)]end end)z=707 end end end end end else if z>=1090 then if z>=1262 then if z<=1338 then if z<=1262 then cj=function(a,h,h)local h,i,k,m,t,w,bb,bd=75,39,30,80,34,35,92,62,13,83,32,38,12,25,29,30,55,77,89,26,39,27,94,81 while h~=51 do if i<=266 then if i<=172 then if i<=75 then if i<67 then k,m,t,w,bb,bd=nil i=75 else i=124 bd={}end else if i>130 then i=203 do w={}end else do bb={}end i=172 end end else if i>=243 then if i<264 then i=266 for bf=1,bp()do do bb[bf-1]=cj();end end else do w[b]=bb;end i=286 end else if i>207 then for b=(#by+1),(#by+k)do local bb,bf,bg,bj,bk=60,57,80,47,35,60,69,98,64,54,35,41,48,81,48,53,21,84,52,99,98,33,72,21,66 while bb~=35 do if bf<=269 then if bf>=161 then if bf<=195 then if bf>164 then do bg[88]=bn();end bf=237 else bk=bp()bf=195 end else if bf>241 then bg[131]=cb(bk,1,11);bf=306 else bf=269 do bg[66]=cb(bj,1,2);end end end else if bf<=79 then if bf>60 then bg={}bf=99 else bf=79 bg,bj,bk=nil end else if bf>101 then bf=161 bj=bp()else bg[31]=bn();bf=146 end end end else if bf<=413 then if bf<=346 then if bf<338 then bg[78]=cb(bj,3,11);bf=346 else bf=369 bg[110]=cb(bj,12,20);end else if bf<406 then bf=413 bg[34]=cb(bj,21,29);else bf=434 do bg[151]=cb(bk,12,33);end end end else if bf<=454 then if bf<450 then bf=454 bg[24]=-bg[78]else bg[7]=-bg[n]bf=491 end else if bf>495 then bb=35;else bf=509 do by[b]=bg;end end end end end end end i=243 else i=220 k=bp()end end end else if i<=406 then if i>=359 then if i<399 then i=406 w[147]=bd;else i=455 m=bp()end else if i<307 then i=310 w[45]=bn();else i=359 for b=1,bp()do local k,n,bb,bf,bg,bj=89,36,37,17,57,71,79,75,88,74,32,84,51,62,48,84,15,23,92,12,92,44,33,23,76 while k~=55 do if n<=277 then if n>=175 then if n<=196 then if n<193 then n=196 if 1==bn()then for bk=1,bn()do bg[162][bk]={bn()==0,bp()}end end else n=225 bb=bp()end else if n<=225 then n=254 bf=bp()else if n<269 then n=277 bj=cb(bb,1,2)else bg[66]=bj n=294 end end end else if n<=54 then if n<47 then n=54 bb,bf,bg,bj=nil else do bg={{},nil,nil,nil}end n=90 end else if n<130 then n=137 do bg[31]=bn();end else do bg[162]={};end n=175 end end end else if n>=439 then if n<=455 then if n<450 then bg[88]=cb(bb,o,20);n=455 else n=477 bg[24]=-bg[78]end else if n<=477 then n=520 bg[7]=-bg[34]else if n<547 then n=549 bd[b]=bg;else k=55;end end end else if n<=338 then if n>298 then bg[78]=cb(bb,3,11);n=370 else n=338 bg[131]=cb(bf,1,11);end else if n<395 then n=404 bg[151]=cb(bf,12,33);else n=439 bg[34]=cb(bb,21,29);end end end end end end end end else if i<=496 then if i<493 then i=496 t={}else i=523 for b=j,m do local j,k,m,n=49,39,25,78,44,97,19,66,54,89,73,27,82,46 while j~=37 do if k>=176 then if k<=176 then k=219 if(3==n)then m=(0~=bn());elseif(0==n)then m=ca();elseif(1==n)then do m=bh();end elseif(not(n~=4))then do m=a[bh()];end end;else if k<253 then k=262 t[b]=m;else j=37;end end else if k>=87 then if k>92 then m=nil k=176 else n=bn()k=136 end else k=87 m,n=nil end end end end end else if i>=542 then if i>544 then h=51;else i=568 return w;end else i=542 w[p]=t end end end end end end z=1306 else if z<1330 then ce={}z=1338 else z=1372 br={}end end else if z>=1390 then if z<1401 then z=1405 return ba(cj(cd()),{},cd())();else y=68;end else ba=function(a,b,h,i,i)local i,j,k,m,n j=a[147]n=a[5]k=ce do m=a[45]end i=a[38]return function(...)local a,k,o,p,t,w,y,bb,bd k=1 w=-1 p=-1 t={}do y={...}end o=(bq('#',...)-c)bd={}a={}for c=0,o do if(not(c<m))then t[(c-m)]=y[(c+1)];else a[c]=y[(c+1)];end;end;do bb=(o-m+1)end while true do local c,m,o,p,y,bf,bg,bj,bk,bl bl=j[k]do bf=bl[131]end p=bl[31]bk=bl[78]bg=bl[110]m=bl[34]do y=bl[88]end o=bl[24]c=bl[151]bj=bl[7]do if not(bf>27)then if not(bf<14)then if not(bf>20)then if not(bf<17)then if not(bl[131]>d)then if not(bf~=17)then if((i[bk]<a[m]))then do k=c;end end;else i=ce[bk](i)end else do if(bf<20)then a[bk]=a[c][i[m]];else local d,j d=bl[78]do j={}end if(#bd>0)then for o=1,#bd do local p p=bd[o]for o=0,#p do local y,bg,bj bg=p[o]bj=bg[1]y=bg[2]if(bj==a and y>=0)then j[y]=bj[y]do bg[1]=j end end end end end return cl(a,d,w);end end end else if not(bl[131]<15)then do if 15==bl[131]then local d,j,o do o=bk end d={a[o](cl(a,o+1,w))}j=0 for p=o,m do do j=(j+1);end a[p]=d[j];end else do a[bl[78]]=h[i[c]];end end end else a[bk]=a[c][a[m]];end end else if not(bf>q)then if not(bf<r)then do if(bf<23)then local d,j,o j=n[bl[151]]o=nil d={}do o=bc({},{__index=function(p,p)local p=d[p];return p[1][p[2]];end,__newindex=function(p,p,q)local p=d[p]p[1][p[2]]=q;end;});end for p=1,m do local q q=bl[162][p]if q[1]then d[(p-1)]={a,q[2],nil,nil,nil};else d[(p-1)]={b,q[2],nil,nil};end;bd[(#bd+1)]=d;end;a[bl[78]]=ba(j,o,h);else k=c;end end else do return a[bk]end end else if not(bf>25)then do if not(bf~=24)then local d d=bk do do do return a[d](cl(a,(d+1),w))end end;end else if(i[m]==a[bl[78]])then k=c;end;end end else do if(bf<27)then local d d={}while#bd>0 do for j=1,#bd do local j=bd[j]for o=0,#j do local j=j[o]local o=j[1]local p=j[2]if o==a and p>=0 then d[p]=o[p]j[1]=d end end end break end return a[bk];else local d,j,o d=bl[78]o=a[d]do j=a[(d+2)]end if((j>0))then do if((o>a[d+1]))then k=c;else a[(d+3)]=o;end end elseif((o<a[d+1]))then do k=c;end else do a[(d+3)]=o;end end end end end end end else if not(bf<7)then if not(bf>9)then do if not(bf<8)then do if(bf>8)then local d do d=bk end w=(d+bb-1);for j=d,w do local o o=t[(j-d)]a[j]=o;end;else local d,j d=bl[78]do j={}end if(#bd>0)then for o=1,#bd do local p p=bd[o]for o=0,#p do local q,r,t q=p[o]t=q[1]r=q[2]while t==a and r>=0 do j[r]=t[r]q[1]=j break end end end end return a[d],a[(d+1)]end end else a[bk]=b[c];end end else if not(bl[131]>11)then if not(bf~=10)then if(a[m]~=a[bk])then k=bl[151];end;else local b b=bk a[b]=a[b](cl(a,b+1,w));end else if(bf<13)then a[bl[78]]=a[c];else local b,d,j,o o=bk d,j=bw(a[o](a[(o+1)]))w=(j+o-1)do b=0 end for j=o,w do b=(b+1);a[j]=d[b];end;end end end else if not(bl[131]<3)then if not(bf<5)then if(bf<6)then local b b=bk a[b](cl(a,(b+1),w))else a[bk][i[bl[g]]]=a[m];end else if not(bf~=3)then do if not a[bk]then k=c;end;end else a[bk]=(a[c]+i[m]);end end else if not(bf<1)then do if not(bf~=1)then if((a[bl[78]]<a[m]))then k=c;end;else a[bk]=i[c]end end else do a[bk]=#a[c];end end end end end else if not(bf<42)then if not(bf>48)then if not(bf>44)then if not(bf<43)then if 43==bf then a[bl[78]][a[c]]=a[m];else a[bk]=(a[bl[151]]+a[m]);end else local b,d,g,j,o j=bl[78]d=m b=(j+2)o={a[j](a[j+1],a[b])}for p=1,d do a[(b+p)]=o[p]end g=a[(j+3)]do if g then a[b]=g else k=c;end;end end else do if not(bf>46)then do if(bf<46)then local b,d,g b=bk d={a[b](a[b+1])}g=0 do for j=b,m do g=(g+1);a[j]=d[g];end end else for b=bk,c do a[b]=nil;end;end end else if 47==bf then local b b=bk a[b]=a[b](cl(a,b+1,c));else local b b=bk a[b](cl(a,(b+1),bl[151]))end end end end else if not(bl[131]<52)then do if not(bf>53)then if(bf<53)then a[bk]=ba(n[c],e,h);else a[bk]=(not a[c]);end else if(bf>54)then do a[bk]={};end else local b,d,e do d=bk end e=a[(d+2)]b=(a[d]+e)a[d]=b;if((e>0))then if(not(b>a[d+1]))then k=c;a[(d+3)]=b;end elseif(not(b<a[d+1]))then do k=c;end a[(d+3)]=b;end end end end else do if not(bf>49)then local b,d,e,g g=bk e,b=bw(a[g](cl(a,(g+1),c)))w=(b+g-1)d=0 do for b=g,w do d=(d+1);a[b]=e[d];end;end else if(bf<51)then local b b=bk a[b]=a[b](a[b+1]);else do a[bk]=(a[c]-a[m]);end end end end end end else if not(bf>34)then if not(bf>30)then if not(bf>28)then if(a[bl[34]]==a[bk])then k=c;end;else if(bf>29)then a[bk]=(a[c]%i[m]);else a[bk]=(a[bl[151]]*i[m]);end end else if not(bf>32)then if(bf<32)then a[bk]=(a[c]/i[m]);else while a[bk]do k=c;break end end else if(bf>33)then local b,d b=bl[78]d={}for e=1,#bd do local g g=bd[e]for e=0,#g do local h,j,n do h=g[e]end n=h[1]do j=h[2]end while n==a and j>=b do d[j]=n[j];h[1]=d;break end end;end;else local b,d d=bk do b=a[bl[151]]end do a[(d+1)]=b;end a[d]=b[i[bl[34]]];end end end else if not(bl[131]<38)then if not(bl[131]>39)then do if(bf>38)then local b b=bk do return a[b](cl(a,(b+x),c))end;else local b b=bk a[b](a[(b+1)])end end else do if u==bf then local b b=bk a[b]=a[b]();else local b,d b=c d=a[b]for e=(b+1),m do d=(d..a[e]);end;a[bk]=d;end end end else if not(bf<36)then do if(bf>36)then a[bk][i[c]]=i[bl[34]];else if(i[m]~=a[bk])then do k=bl[151];end end;end end else a[bl[78]]=nil;end end end end end end k=(k+1);end;end;end z=1390 end end else if z<=1131 then if z>1095 then do ca=function()local a,b,c,d,e,g,h,i=76,49,75,16,23,69,81,55,10,61,91,99,47,44,57,20,70,28,26 while a~=49 do if b<=171 then if b>=105 then if b>=129 then if b<164 then if((e==0 and c==0))then return l end b=171 else b=196 h=((-1)^cm(31,c,1))end else c=bp()b=129 end else if b>52 then b=105 e=bp()else c,d,e,g,h,i=nil b=78 end end else if b>=285 then if b>=302 then if b>309 then break else b=336 return(h*(2^(d-1023))*(g/bz+i))end else if not(d~=0)then if 0~=g then d=1 i=0 else return(h*0)end elseif v~=d then else do if not(g~=f)then do do return(h*(0/0))end end else return(h*(1/0))end end end b=302 end else if b<=196 then d=cm(20,c,11)b=241 else if b<259 then g=(cm(0,c,20)*4294967296+e)b=263 else do i=1 end b=285 end end end end end end end z=1177 else z=1131 cc=function()local a,b a,b=bx(be,bs,(bs+2))bs=(bs+2);return((b*256)+a);end end else if z<=1177 then z=1193 do bh=function(a,a,a,a,a)local a,b,c,d=93,59,79,60,55,93,78,30,46,65,70,89 while a~=44 do if b<=144 then if b<=59 then c,d=nil b=103 else if b<141 then d=bp()b=144 else b=173 c=be:sub(bs,(bs+d-1))end end else if b<=173 then b=212 bs=(bs+d);else if b<224 then b=230 return c;else break end end end end end end else if z<1212 then do bw=function(...)do return{...},bq('#',...)end end end z=1220 else z=1262 do by={}end end end end end else if z<=868 then if z<=761 then if z<757 then z=761 ck=''else do bz=(2^52)end z=806 end else if z>=823 then if z<865 then bm=2 z=868 else z=894 for a=1,31 do bu[a]=bm bm=(bm*2)end end else z=823 do bu={[0]=1}end end end else if z>=1006 then if z>=1036 then if z>1042 then z=1090 bn=function()local a a=bx(be,bs,bs)bs=(bs+1);return a;end else z=1060 do bp=function()local a,b,c,d c,d,b,a=bx(be,bs,(bs+3))bs=(bs+4);return((a*16777216)+(b*65536)+(d*256)+c);end end end else do bs=s end z=1036 end else if z<=894 then cm=function(a,b,c,d,d)local d,e,f=55,35,74,93,43,41,50,21,73,46,41,12,51,64 while d~=30 do if e<=80 then if e<=35 then e=61 f=nil else if e>69 then do f=((b/bu[a])%bu[c])end e=112 else f=nil e=80 end end else if e<=112 then e=153 f=(f-f%1)else if e<185 then e=192 return f else break end end end end end z=939 else if z<970 then do ci=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bi[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end z=978 else cb=function(a,b,c,d)local d do d=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(d-d%1);end z=1006 end end end end end end end end)(10,5,1,18,nil,0,151,0,8,1,2,0,0,34,12,38,23,22,1,2,40,2047,4,1)
